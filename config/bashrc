export TODO_DIR="$HOME/.local/share/todo"

if [ ! -f "$TODO_DIR/todo.cfg" ]; then
  mkdir -p $TODO_DIR
  cat > $TODO_DIR/todo.cfg <<EOF
export TODO_DIR="$HOME/.local/share/todo"
export TODO_FILE="$TODO_DIR/todo.txt"
export DONE_FILE="$TODO_DIR/done.txt"
export REPORT_FILE="$TODO_DIR/report.txt"
EOF
fi

alias up-todo="nvim $TODO_DIR/todo.txt"
alias todo="todo.sh -d $TODO_DIR/todo.cfg"

export TODAY="$(date +%a)"


function ps1_powerline {
  RETCODE=$? # save return code
  NUM_JOBS=$(jobs -rp | wc -l)

  local GREY="\[\e[48;5;240m\]\[\e[38;5;250m\]"
  local GREY_END="\[\e[48;5;2m\]\[\e[38;5;240m\]"

  local GREEN="\[\e[48;5;2m\]\[\e[38;5;255m\]"
  local GREEN_END="\[\e[48;5;27m\]\[\e[38;5;2m\]"

  local ORANGE="\[\e[48;5;208m\]\[\e[38;5;255m\]"
  local ORANGE_END="\[\e[48;5;236m\]\[\e[38;5;208m\]"
  local ORANGE_RET_END="\[\e[48;5;160m\]\[\e[38;5;208m\]" # when next segment is prompt with return code

  local BLUE="\[\e[48;5;27m\]\[\e[38;5;255m\]"
  local BLUE_END_JOBS="\[\e[48;5;93m\]\[\e[38;5;27m\]"       # when next segment is jobs
  local BLUE_END_ALT="\[\e[48;5;236m\]\[\e[38;5;27m\]"       # when next segment is prompt
  local BLUE_END_RET="\[\e[48;5;160m\]\[\e[38;5;27m\]"       # when next segment is prompt with return code

  local JOBS="\[\e[48;5;93m\]\[\e[38;5;255m\] ⏎"
  local JOBS_END="\[\e[48;5;236m\]\[\e[38;5;93m\]"           # when next segment is prompt
  local JOBS_NO_GIT_END="\[\e[48;5;160m\]\[\e[38;5;93m\]"    # when next segment is prompt with return code

  local RET="\[\e[48;5;160m\]\[\e[38;5;255m\]"
  local RET_END="\[\e[0m\]\[\e[38;5;160m\]\[\e[0m\] "

  local PROMPT="\[\e[48;5;236m\]\[\e[38;5;255m\]"
  local PROMPT_END="\[\e[0m\]\[\e[38;5;236m\]\[\e[0m\] "

  if [ ! -w "$PWD" ]; then
    # Current directory is not writable
    BLUE_END="\[\e[48;5;160m\]\[\e[38;5;27m\]\[\e[38;5;255m\]  \[\e[48;5;208m\]\[\e[38;5;160m\]"
    BLUE_END_JOBS="\[\e[48;5;160m\]\[\e[38;5;27m\]\[\e[38;5;255m\]  \[\e[48;5;93m\]\[\e[38;5;160m\]"
    BLUE_END_ALT="\[\e[48;5;160m\]\[\e[38;5;27m\]\[\e[38;5;255m\]  \[\e[48;5;236m\]\[\e[38;5;160m\]"
    BLUE_END_RET="\[\e[48;5;160m\]\[\e[38;5;27m\]\[\e[38;5;255m\]  "
  fi

  
  PS1="$GREY \t $GREY_END$GREEN @\h $GREEN_END$BLUE \W $BLUE_END_JOBS$JOBS$NUM_JOBS \$ ⚑ $RETCODE $RET_END"
}

if [  "$TERM" != "linux" ]; then
   PROMPT_COMMAND="ps1_powerline; $PROMPT_COMMAND"
fi


